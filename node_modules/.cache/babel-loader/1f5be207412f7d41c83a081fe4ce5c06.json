{"ast":null,"code":"var _jsxFileName = \"/Users/danielarchibald/Desktop/proj/TSV_Editor/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      tsvData: [],\n      headers: [],\n      loadingState: 1\n    };\n    this.addHeader = this.addHeader.bind(this);\n    this.populateTable = this.populateTable.bind(this);\n    this.closeEditor = this.closeEditor.bind(this);\n    this.uploadFile = this.uploadTSV.bind(this);\n    this.export = this.export.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  export() {\n    var fileExport = []; //iterate over table and export data to text\n\n    var table = document.getElementById(\"headers\"); // support for pulling data out of <th>\n\n    var elements = [].slice.call(table.children);\n    elements.map(element => {\n      if (element.nodeName == 'TH') {\n        fileExport.push(element.children[0].value);\n      } else {\n        //support for pulling data out of <tr>, then <td>\n        var innerElements = [].slice.call(element.children);\n        innerElements.map(innerElement => {\n          fileExport.push(innerElement.children[0].value);\n        });\n      } // add some nice new lines to be pretty\n\n\n      fileExport[fileExport.length - 1] = fileExport[fileExport.length - 1] + '\\r\\n';\n    });\n    console.log(fileExport);\n\n    var download = () => function download(filename = 'export.csv', text = fileExport) {\n      var element = document.createElement('a');\n      element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n      element.setAttribute('download', filename);\n      element.style.display = 'none';\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n    }();\n\n    download();\n  }\n\n  handleChange() {}\n\n  closeEditor() {\n    confirm(\"Are you sure you want to close?\") ? this.setState({\n      loadingState: 1\n    }) : alert(\"Canceled\");\n  }\n\n  populateTable(data) {\n    if (data.length > 1) {\n      for (var i = 0; i < data.length; ++i) {\n        var rowNode = document.createElement(\"tr\");\n        var dataNode = '';\n        var dataRow = [];\n        var entry = [];\n\n        for (var j = 0; j < data[j].length; ++j) {\n          data[i][j].split('\\t')[1] == undefined ? dataRow = data[i][j].split(',') : dataRow = data[i][j].split('\\t');\n\n          for (var k = 0; k < dataRow.length; ++k) {\n            entry = dataRow[k];\n            dataNode = document.createElement(\"td\");\n            var text = entry;\n            var inputNode = document.createElement(\"input\");\n            inputNode.value = text;\n            dataNode.appendChild(inputNode);\n            rowNode.appendChild(dataNode);\n          }\n        }\n\n        document.getElementById('headers').appendChild(rowNode);\n      }\n    } else {\n      var rowNode = document.createElement(\"tr\");\n      var entry = '';\n      var d = data.join('');\n      var row = d.split(',');\n\n      for (var i = 0; i < row.length; ++i) {\n        var dataNode = document.createElement(\"td\");\n        var text = row[i];\n        var inputNode = document.createElement(\"input\");\n        inputNode.value = text;\n        dataNode.appendChild(inputNode);\n        rowNode.appendChild(dataNode);\n      }\n\n      document.getElementById('headers').appendChild(rowNode);\n    }\n  }\n\n  addHeader() {\n    var header = document.createElement(\"th\");\n    document.getElementById('headers').appendChild(header);\n  }\n\n  uploadTSV() {\n    document.getElementById('tsv-file').files[0] == undefined ? window.alert('please select a file.') : this.setState({\n      loadingState: 2\n    });\n    let tsv = document.getElementById(\"tsv-file\").files[0];\n    tsv.stream().getReader().read().then(stream => {\n      var decoder = new TextDecoder();\n      var decoded = decoder.decode(stream.value);\n      var headers = [];\n      var entries = [];\n      var rows = [];\n      decoded.split('\\r\\n') === [] || decoded.split('\\r\\n')[1] == undefined ? rows = decoded.split(',') : rows = decoded.split('\\r\\n');\n\n      for (var i = 0; i < rows.length; ++i) {\n        var row = rows[i];\n        entries.push([row]);\n      }\n\n      entries.shift();\n      rows[0].split('\\t')[1] == undefined ? headers = rows[0].split(',') : headers = rows[0].split('\\t');\n      this.setState({\n        tsvData: entries,\n        headers: headers,\n        loadingState: 3\n      });\n      return entries;\n    }).then(entries => this.populateTable(entries));\n  }\n\n  render() {\n    if (this.state.loadingState == 1) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"CSV/TSV Editor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"tsv-file\",\n          type: \"file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.uploadFile(),\n          children: \"Upload File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }, this);\n    } else if (this.state.loadingState == 2) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading File, please wait...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"dummy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 7\n      }, this);\n    } else if (this.state.loadingState == 3) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"welcome bruh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Hosted on Dropbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.export(),\n          style: {\n            float: 'right',\n            color: 'green',\n            width: 100,\n            height: 30\n          },\n          children: \"Export\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"changefile\",\n          children: \"Change file: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"changefile\",\n          type: \"text\",\n          placeholder: \"enter file path e.g. /data - data (1).tsv\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"table\",\n          style: {\n            border: \"1px solid #ddd\",\n            padding: \"8px\",\n            fontFamily: \"Arial, Helvetica, sans-serif\",\n            borderCollapse: \"collapse\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"headers\",\n            value: \"headerssss\",\n            children: this.state.headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: () => this.handleChange(e.target.value),\n                defaultValue: header\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 16\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 12\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.closeEditor(),\n          class: \"fixed\",\n          id: \"fixy\",\n          children: \"Close Editor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.addHeader(),\n          children: \" add header\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 7\n      }, this);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/danielarchibald/Desktop/proj/TSV_Editor/src/App.js"],"names":["React","App","Component","constructor","state","tsvData","headers","loadingState","addHeader","bind","populateTable","closeEditor","uploadFile","uploadTSV","export","handleChange","fileExport","table","document","getElementById","elements","slice","call","children","map","element","nodeName","push","value","innerElements","innerElement","length","console","log","download","filename","text","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","confirm","setState","alert","data","i","rowNode","dataNode","dataRow","entry","j","split","undefined","k","inputNode","d","join","row","header","files","window","tsv","stream","getReader","read","then","decoder","TextDecoder","decoded","decode","entries","rows","shift","render","float","color","width","height","border","padding","fontFamily","borderCollapse","e","target"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      tsvData: [],\n      headers: [],\n      loadingState: 1\n    };\n    this.addHeader = this.addHeader.bind(this);\n    this.populateTable = this.populateTable.bind(this);\n    this.closeEditor = this.closeEditor.bind(this);\n    this.uploadFile = this.uploadTSV.bind(this);\n    this.export = this.export.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  export(){\n    var fileExport = []\n    //iterate over table and export data to text\n    var table = document.getElementById(\"headers\")\n\n    // support for pulling data out of <th>\n    var elements = [].slice.call(table.children);\n    elements.map((element) => {\n      if (element.nodeName == 'TH'){\n        fileExport.push(element.children[0].value)\n      } else {\n      //support for pulling data out of <tr>, then <td>\n        var innerElements = [].slice.call(element.children)\n        innerElements.map((innerElement) => {\n          fileExport.push(innerElement.children[0].value)\n        })\n        }\n        // add some nice new lines to be pretty\n        fileExport[fileExport.length - 1] = fileExport[fileExport.length - 1] + '\\r\\n'\n    })\n    console.log(fileExport)\n\n  var download = () => (function download(filename = 'export.csv', text = fileExport) {\n    var element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n    element.setAttribute('download', filename);\n  \n    element.style.display = 'none';\n    document.body.appendChild(element);\n  \n    element.click();\n  \n    document.body.removeChild(element);\n  })()\n  download(); \n}\n\n  handleChange(){\n\n  }\n\n  closeEditor() {\n    confirm(\"Are you sure you want to close?\") ?\n      this.setState({\n        loadingState: 1\n      })\n      : alert(\"Canceled\");\n  }\n  populateTable(data){\n\n    if (data.length > 1){\n    for (var i = 0; i < data.length; ++i){\n\n      var rowNode = document.createElement(\"tr\");\n      var dataNode = ''\n      var dataRow = []\n      var entry = []\n\n      for (var j = 0; j < data[j].length; ++j) {\n\n        data[i][j].split('\\t')[1] == undefined ? \n          dataRow = data[i][j].split(',') : \n          dataRow = data[i][j].split('\\t') \n\n        for (var k = 0; k < dataRow.length; ++k){\n          entry = dataRow[k]\n          dataNode = document.createElement(\"td\");\n          var text = entry\n          var inputNode = document.createElement(\"input\")\n          inputNode.value = text\n          dataNode.appendChild(inputNode)\n          rowNode.appendChild(dataNode)\n        }\n      }\n      document.getElementById('headers').appendChild(rowNode);\n      \n    }\n\n  } else {\n    var rowNode = document.createElement(\"tr\")\n    var entry = ''\n    var d = data.join('')\n    var row = d.split(',')\n    for (var i = 0; i < row.length; ++i){\n      var dataNode = document.createElement(\"td\")\n      var text = row[i]\n      var inputNode = document.createElement(\"input\")\n      inputNode.value = text\n      dataNode.appendChild(inputNode)\n      rowNode.appendChild(dataNode)\n    }\n    document.getElementById('headers').appendChild(rowNode)\n  }\n}\naddHeader(){\n  var header = document.createElement(\"th\")\n  document.getElementById('headers').appendChild(header)\n}\n\n  uploadTSV() {\n    document.getElementById('tsv-file').files[0] == undefined ?\n    window.alert('please select a file.') : this.setState({loadingState: 2});\n\n    let tsv = document.getElementById(\"tsv-file\").files[0];\n    tsv.stream().getReader().read()\n    .then(stream => {\n        var decoder = new TextDecoder();\n        var decoded = decoder.decode(stream.value)\n        var headers = []\n        var entries = []\n        var rows = []\n\n        decoded.split('\\r\\n') === [] || decoded.split('\\r\\n')[1] == undefined ? \n          rows = decoded.split(',') : \n          rows = decoded.split('\\r\\n')\n\n        for (var i = 0; i < rows.length; ++i){\n\n          var row = rows[i]\n          entries.push([row])\n\n        }\n        \n        entries.shift();\n\n        rows[0].split('\\t')[1] == undefined ? \n          headers = rows[0].split(',') :\n          headers = rows[0].split('\\t')\n        this.setState({\n          tsvData: entries,\n          headers: headers,\n          loadingState: 3\n        })\n\n        return entries\n    }).then(entries => this.populateTable(entries))\n}\n\nrender() {\n  if (this.state.loadingState == 1) {\n    return (\n      <div>\n        <p>CSV/TSV Editor</p>\n        <input id=\"tsv-file\" type=\"file\"></input>\n        <button onClick={() => this.uploadFile()}>Upload File</button>\n      </div>\n    )\n  } else if (this.state.loadingState == 2) {\n    return(\n      <div>\n      <p>Loading File, please wait...</p>\n      <p id=\"dummy\"></p>\n    </div>\n  )\n  } else if (this.state.loadingState == 3) {\n    return (\n      <div>\n        <h3>welcome bruh</h3>\n        <h3>Hosted on Dropbox</h3>\n        <button onClick={() => this.export()} style={{float: 'right',color: 'green',width: 100,height:30}}>Export</button>\n        <label for='changefile'>Change file: </label>\n        <input\n          id='changefile'\n          type=\"text\"\n          placeholder=\"enter file path e.g. /data - data (1).tsv\"\n        />\n        <table id=\"table\"\n          style={{\n            border: \"1px solid #ddd\",\n            padding: \"8px\",\n            fontFamily: \"Arial, Helvetica, sans-serif\",\n            borderCollapse: \"collapse\",\n          }}\n        ><div id=\"headers\" value='headerssss'>\n         {this.state.headers.map((header => (\n           <th><input onChange={() => this.handleChange(e.target.value)} defaultValue={header} /></th>\n         )))}\n         </div>\n            </table>\n      <button onClick={() => this.closeEditor()} class=\"fixed\" id=\"fixy\">\n        Close Editor\n      </button>\n      <button onClick={() => this.addHeader()}> add header</button>\n    </div>\n  );\n  }\n}\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}