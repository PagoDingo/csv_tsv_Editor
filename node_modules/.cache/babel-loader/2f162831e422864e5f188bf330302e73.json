{"ast":null,"code":"var _jsxFileName = \"/Users/danielarchibald/Desktop/proj/TSV_Editor/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      tsvData: [],\n      headers: [],\n      loadingState: 1\n    };\n    this.addHeader = this.addHeader.bind(this);\n    this.populateTable = this.populateTable.bind(this);\n    this.closeEditor = this.closeEditor.bind(this);\n    this.uploadFile = this.uploadTSV.bind(this);\n    this.export = this.export.bind(this);\n  }\n\n  export() {\n    var table = document.getElementById(\"table\");\n    console.log(table.rows)[0].innerHTML;\n  }\n\n  closeEditor() {\n    confirm(\"Are you sure you want to close?\") ? this.setState({\n      loadingState: 1\n    }) : alert(\"Canceled\");\n  }\n\n  populateTable(data) {\n    if (data.length > 1) {\n      for (var i = 0; i < data.length; ++i) {\n        var rowNode = document.createElement(\"tr\");\n        var dataNode = '';\n        var dataRow = [];\n        var entry = [];\n\n        for (var j = 0; j < data[j].length; ++j) {\n          data[i][j].split('\\t')[1] == undefined ? dataRow = data[i][j].split(',') : dataRow = data[i][j].split('\\t');\n\n          for (var k = 0; k < dataRow.length; ++k) {\n            entry = dataRow[k];\n            dataNode = document.createElement(\"td\");\n            var text = entry;\n            var inputNode = document.createElement(\"input\");\n            inputNode.value = text;\n            dataNode.appendChild(inputNode);\n            rowNode.appendChild(dataNode);\n          }\n        }\n\n        document.getElementById('headers').appendChild(rowNode);\n      }\n    } else {\n      var rowNode = document.createElement(\"tr\");\n      var entry = '';\n      var d = data.join('');\n      var row = d.split(',');\n\n      for (var i = 0; i < row.length; ++i) {\n        var dataNode = document.createElement(\"td\");\n        var text = row[i];\n        var inputNode = document.createElement(\"input\");\n        inputNode.value = text;\n        dataNode.appendChild(inputNode);\n        rowNode.appendChild(dataNode);\n      }\n\n      document.getElementById('table').appendChild(rowNode);\n    }\n  }\n\n  addHeader() {\n    var header = document.createElement(\"th\");\n    document.getElementById('headers').appendChild(header);\n  }\n\n  uploadTSV() {\n    document.getElementById('tsv-file').files[0] == undefined ? window.alert('please select a file.') : this.setState({\n      loadingState: 2\n    });\n    let tsv = document.getElementById(\"tsv-file\").files[0];\n    tsv.stream().getReader().read().then(stream => {\n      var decoder = new TextDecoder();\n      var decoded = decoder.decode(stream.value);\n      var headers = [];\n      var entries = [];\n      var rows = [];\n      decoded.split('\\r\\n') === [] || decoded.split('\\r\\n')[1] == undefined ? rows = decoded.split(',') : rows = decoded.split('\\r\\n');\n\n      for (var i = 0; i < rows.length; ++i) {\n        var row = rows[i];\n        entries.push([row]);\n      }\n\n      entries.shift();\n      rows[0].split('\\t')[1] == undefined ? headers = rows[0].split(',') : headers = rows[0].split('\\t');\n      this.setState({\n        tsvData: entries,\n        headers: headers,\n        loadingState: 3\n      });\n      return entries;\n    }).then(entries => this.populateTable(entries));\n  }\n\n  render() {\n    if (this.state.loadingState == 1) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"CSV/TSV Editor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"tsv-file\",\n          type: \"file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.uploadFile(),\n          children: \"Upload File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }, this);\n    } else if (this.state.loadingState == 2) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading File, please wait...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"dummy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }, this);\n    } else if (this.state.loadingState == 3) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"welcome bruh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Hosted on Dropbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.export(),\n          style: {\n            float: 'right',\n            color: 'green',\n            width: 100,\n            height: 30\n          },\n          children: \"Export\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"changefile\",\n          children: \"Change file: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"changefile\",\n          type: \"text\",\n          placeholder: \"enter file path e.g. /data - data (1).tsv\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"table\",\n          style: {\n            border: \"1px solid #ddd\",\n            padding: \"8px\",\n            fontFamily: \"Arial, Helvetica, sans-serif\",\n            borderCollapse: \"collapse\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"headers\",\n            children: this.state.headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                value: header\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 16\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 12\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.closeEditor(),\n          class: \"fixed\",\n          id: \"fixy\",\n          children: \"Close Editor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.addHeader(),\n          children: \" add header\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }, this);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/danielarchibald/Desktop/proj/TSV_Editor/src/App.js"],"names":["React","App","Component","constructor","state","tsvData","headers","loadingState","addHeader","bind","populateTable","closeEditor","uploadFile","uploadTSV","export","table","document","getElementById","console","log","rows","innerHTML","confirm","setState","alert","data","length","i","rowNode","createElement","dataNode","dataRow","entry","j","split","undefined","k","text","inputNode","value","appendChild","d","join","row","header","files","window","tsv","stream","getReader","read","then","decoder","TextDecoder","decoded","decode","entries","push","shift","render","float","color","width","height","border","padding","fontFamily","borderCollapse","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      tsvData: [],\n      headers: [],\n      loadingState: 1\n    };\n    this.addHeader = this.addHeader.bind(this);\n    this.populateTable = this.populateTable.bind(this);\n    this.closeEditor = this.closeEditor.bind(this);\n    this.uploadFile = this.uploadTSV.bind(this);\n    this.export = this.export.bind(this);\n  }\n\n  export(){\n    var table = document.getElementById(\"table\")\n\n    console.log(table.rows)[0].innerHTML\n  }\n\n\n  closeEditor() {\n    confirm(\"Are you sure you want to close?\") ?\n      this.setState({\n        loadingState: 1\n      })\n      : alert(\"Canceled\");\n  }\n  populateTable(data){\n\n    if (data.length > 1){\n    for (var i = 0; i < data.length; ++i){\n\n      var rowNode = document.createElement(\"tr\");\n      var dataNode = ''\n      var dataRow = []\n      var entry = []\n\n      for (var j = 0; j < data[j].length; ++j) {\n\n        data[i][j].split('\\t')[1] == undefined ? \n          dataRow = data[i][j].split(',') : \n          dataRow = data[i][j].split('\\t') \n\n        for (var k = 0; k < dataRow.length; ++k){\n          entry = dataRow[k]\n          dataNode = document.createElement(\"td\");\n          var text = entry\n          var inputNode = document.createElement(\"input\")\n          inputNode.value = text\n          dataNode.appendChild(inputNode)\n          rowNode.appendChild(dataNode)\n        }\n      }\n      document.getElementById('headers').appendChild(rowNode);\n      \n    }\n\n  } else {\n    var rowNode = document.createElement(\"tr\")\n    var entry = ''\n    var d = data.join('')\n    var row = d.split(',')\n    for (var i = 0; i < row.length; ++i){\n      var dataNode = document.createElement(\"td\")\n      var text = row[i]\n      var inputNode = document.createElement(\"input\")\n      inputNode.value = text\n      dataNode.appendChild(inputNode)\n      rowNode.appendChild(dataNode)\n    }\n    document.getElementById('table').appendChild(rowNode)\n  }\n}\naddHeader(){\n  var header = document.createElement(\"th\")\n  document.getElementById('headers').appendChild(header)\n}\n\n  uploadTSV() {\n    document.getElementById('tsv-file').files[0] == undefined ?\n    window.alert('please select a file.') : this.setState({loadingState: 2});\n\n    let tsv = document.getElementById(\"tsv-file\").files[0];\n    tsv.stream().getReader().read()\n    .then(stream => {\n        var decoder = new TextDecoder();\n        var decoded = decoder.decode(stream.value)\n        var headers = []\n        var entries = []\n        var rows = []\n\n        decoded.split('\\r\\n') === [] || decoded.split('\\r\\n')[1] == undefined ? \n          rows = decoded.split(',') : \n          rows = decoded.split('\\r\\n')\n\n        for (var i = 0; i < rows.length; ++i){\n\n          var row = rows[i]\n          entries.push([row])\n\n        }\n        \n        entries.shift();\n\n        rows[0].split('\\t')[1] == undefined ? \n          headers = rows[0].split(',') :\n          headers = rows[0].split('\\t')\n        this.setState({\n          tsvData: entries,\n          headers: headers,\n          loadingState: 3\n        })\n\n        return entries\n    }).then(entries => this.populateTable(entries))\n}\n\nrender() {\n  if (this.state.loadingState == 1) {\n    return (\n      <div>\n        <p>CSV/TSV Editor</p>\n        <input id=\"tsv-file\" type=\"file\"></input>\n        <button onClick={() => this.uploadFile()}>Upload File</button>\n      </div>\n    )\n  } else if (this.state.loadingState == 2) {\n    return(\n      <div>\n      <p>Loading File, please wait...</p>\n      <p id=\"dummy\"></p>\n    </div>\n  )\n  } else if (this.state.loadingState == 3) {\n    return (\n      <div>\n        <h3>welcome bruh</h3>\n        <h3>Hosted on Dropbox</h3>\n        <button onClick={() => this.export()} style={{float: 'right',color: 'green',width: 100,height:30}}>Export</button>\n        <label for='changefile'>Change file: </label>\n        <input\n          id='changefile'\n          type=\"text\"\n          placeholder=\"enter file path e.g. /data - data (1).tsv\"\n        />\n        <table id={\"table\"}\n          style={{\n            border: \"1px solid #ddd\",\n            padding: \"8px\",\n            fontFamily: \"Arial, Helvetica, sans-serif\",\n            borderCollapse: \"collapse\",\n          }}\n        ><div id=\"headers\">\n         {this.state.headers.map((header => (\n           <th><input value={header}/></th>\n         )))}\n         </div>\n            </table>\n      <button onClick={() => this.closeEditor()} class=\"fixed\" id=\"fixy\">\n        Close Editor\n      </button>\n      <button onClick={() => this.addHeader()}> add header</button>\n    </div>\n  );\n  }\n}\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}